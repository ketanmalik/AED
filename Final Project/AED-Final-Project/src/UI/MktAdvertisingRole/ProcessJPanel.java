/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.MktAdvertisingRole;

import Business.EcoSystem.EcoSystem;
import Business.EnterpriseDirectory.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.util.SMS;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ketanmalik
 */
public class ProcessJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessJPanel
     */
    private JPanel displayPanel;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private WorkRequest request;
    private static int id = 1;

    public ProcessJPanel(JPanel displayPanel, UserAccount userAccount, Enterprise enterprise, EcoSystem ecoSystem, WorkRequest request) {
        initComponents();
        this.displayPanel = displayPanel;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        this.request = request;
        setFields();
        enableFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        completeBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        strengthTxtField = new javax.swing.JTextField();
        typeDropdown = new javax.swing.JComboBox<>();
        priceTxtField = new javax.swing.JTextField();
        marketPriceTxtField = new javax.swing.JTextField();
        quantityTxtField = new javax.swing.JTextField();
        activeIngredientTxtField = new javax.swing.JTextField();
        descriptionTxtField = new javax.swing.JTextField();
        strengthLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        completeBtn.setText("Complete Process");
        completeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeBtnActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Medicine Name:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Strength:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Description:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Market Price:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Quantity:");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Active Ingredient:");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Medicine Type:");

        nameTxtField.setText("jTextField1");

        strengthTxtField.setText("jTextField2");

        typeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tablet", "Capsule", "Syrup" }));

        priceTxtField.setText("jTextField3");

        marketPriceTxtField.setText("jTextField4");

        quantityTxtField.setText("jTextField5");

        activeIngredientTxtField.setText("jTextField6");

        descriptionTxtField.setText("jTextField7");

        strengthLabel.setForeground(new java.awt.Color(255, 255, 255));
        strengthLabel.setText("(mg)");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("(USD)");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("(USD)");

        quantityLabel.setForeground(new java.awt.Color(255, 255, 255));
        quantityLabel.setText("(ml)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(strengthTxtField)
                            .addComponent(typeDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceTxtField)
                            .addComponent(marketPriceTxtField)
                            .addComponent(quantityTxtField)
                            .addComponent(activeIngredientTxtField)
                            .addComponent(descriptionTxtField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(strengthLabel)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(quantityLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(completeBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addGap(469, 469, 469)))))
                .addContainerGap(447, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(backBtn)
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(strengthTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strengthLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(typeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(marketPriceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(activeIngredientTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descriptionTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(completeBtn)
                .addGap(270, 270, 270))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setFields() {
        nameTxtField.setText(request.getMedicine().getName());
        priceTxtField.setText("");
        marketPriceTxtField.setText("");
        quantityTxtField.setText("");
        activeIngredientTxtField.setText(request.getMedicine().getActiveIngredient());
        descriptionTxtField.setText(request.getMedicine().getDescription());
        String type = request.getMedicine().getType();
        if (type.equals("Tablet")) {
            strengthLabel.setText("(mg)");
            strengthTxtField.setText(String.valueOf(request.getMedicine().getStrength()));
            quantityLabel.setText("(unit(s) per pack)");
            typeDropdown.setSelectedIndex(0);
        } else if (type.equals("Capsule")) {
            strengthLabel.setText("(mg)");
            strengthTxtField.setText(String.valueOf(request.getMedicine().getStrength()));
            quantityLabel.setText("(unit(s) per pack)");
            typeDropdown.setSelectedIndex(1);
        } else if (type.equals("Syrup")) {
            strengthLabel.setText("");
            strengthTxtField.setText("");
            quantityLabel.setText("(unit(s) per pack)");
//            quantityLabel.setText("(ml)");
            typeDropdown.setSelectedIndex(2);
        }
    }

    private void enableFields() {
        nameTxtField.setEnabled(false);
        typeDropdown.setEnabled(false);
        strengthTxtField.setEnabled(false);
        activeIngredientTxtField.setEnabled(false);
        descriptionTxtField.setEnabled(false);
    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        displayPanel.remove(this);
        Component[] componentArray = displayPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdvertisingWorkAreaJPanel mwjp = (AdvertisingWorkAreaJPanel) component;
        mwjp.populateTables();
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);
    }//GEN-LAST:event_backBtnActionPerformed

    private void completeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeBtnActionPerformed
        double price;
        double marketPrice;
        int quantity;
        try {
            Double.parseDouble(priceTxtField.getText());
            if (Double.parseDouble(priceTxtField.getText()) == 0) {
                JOptionPane.showMessageDialog(null, "Price cannot be 0", "Invalid Price", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter valid value for price", "Invalid Price", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Double.parseDouble(marketPriceTxtField.getText());
            if (Double.parseDouble(marketPriceTxtField.getText()) == 0) {
                JOptionPane.showMessageDialog(null, "Market price cannot be 0", "Invalid Price", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter valid value for market price", "Invalid Price", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(quantityTxtField.getText());
            if (Integer.parseInt(quantityTxtField.getText()) == 0) {
                JOptionPane.showMessageDialog(null, "Quantity cannot be 0", "Invalid Quantity", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter valid quantity", "Invalid Quantity", JOptionPane.ERROR_MESSAGE);
            return;
        }
        price = Double.parseDouble(priceTxtField.getText());
        marketPrice = Double.parseDouble(marketPriceTxtField.getText());
        if (price <= marketPrice) {
            JOptionPane.showMessageDialog(null, "We cannot manufacture medicines for prices higher than or equal to the market price", "Price mismatch", JOptionPane.ERROR_MESSAGE);
            return;
        }
        quantity = Integer.parseInt(quantityTxtField.getText());

        int input = JOptionPane.showOptionDialog(null, "Are you you want to complete " + request.getId() + " request", "Process Confirmation", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);

        if (input == JOptionPane.OK_OPTION) {
//            String progress = (notesTxtField.getText() == null || notesTxtField.getText().equals("")) ? "" : notesTxtField.getText();
//            request.setProgress(progress);
            request.getMedicine().setPrice(price);
            request.getMedicine().setMarketPrice(marketPrice);
            request.getMedicine().setQuantity(quantity);
            request.setStatus("Request Completed");
            request.setResolveDate(new Date());
            request.setSender(userAccount);
            request.setReceiver(null);
            userAccount.getWorkQueue().getWorkRequestList().clear();
            ecoSystem.getMedicineList().add(request.getMedicine());
            String msg = "Your request with ID " + request.getId() + " is now ready for manufacturing. Please place an order for manufacturing the medicine";
            SMS.sendSMS(msg);
            JOptionPane.showMessageDialog(null, "Your request has been completed. The medicine can now be ordered and manufactured");
            displayPanel.remove(this);
            Component[] componentArray = displayPanel.getComponents();
            Component component = componentArray[componentArray.length - 1];
            AdvertisingWorkAreaJPanel awjp = (AdvertisingWorkAreaJPanel) component;
            awjp.populateTables();
            CardLayout layout = (CardLayout) displayPanel.getLayout();
            layout.previous(displayPanel);
        }
    }//GEN-LAST:event_completeBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activeIngredientTxtField;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton completeBtn;
    private javax.swing.JTextField descriptionTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField marketPriceTxtField;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JTextField priceTxtField;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField quantityTxtField;
    private javax.swing.JLabel strengthLabel;
    private javax.swing.JTextField strengthTxtField;
    private javax.swing.JComboBox<String> typeDropdown;
    // End of variables declaration//GEN-END:variables
}
