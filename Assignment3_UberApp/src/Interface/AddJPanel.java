/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.CarAttributes;
import Business.CarFleet;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ketanmalik
 */
public class AddJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddJPanel
     */
    private JPanel displayPanel;
    private CarFleet carFleet;
    private LocalDate date;

    public AddJPanel(JPanel displayPanel, CarFleet carFleet) {
        initComponents();
        this.displayPanel = displayPanel;
        this.carFleet = carFleet;
        this.date = LocalDate.now();
        DateTimeFormatter f = DateTimeFormatter.ofPattern("dd MMMM yyyy");
        dateAddedTxtField.setText(date.format(f));
        availTimeTxtBox.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        modeLabel = new javax.swing.JLabel();
        modelTxtField = new javax.swing.JTextField();
        serialNoLabel = new javax.swing.JLabel();
        serialNoTxtField = new javax.swing.JTextField();
        manufacturerLabel = new javax.swing.JLabel();
        manufacturerTxtField = new javax.swing.JTextField();
        yomLabel = new javax.swing.JLabel();
        yomTxtField = new javax.swing.JTextField();
        seatingCapacityLabel = new javax.swing.JLabel();
        seatingCapacityTxtField = new javax.swing.JTextField();
        colorLabel = new javax.swing.JLabel();
        colorTxtField = new javax.swing.JTextField();
        dateAddedLabel = new javax.swing.JLabel();
        dateAddedTxtField = new javax.swing.JTextField();
        availabilityLabel = new javax.swing.JLabel();
        availabilityCheckBox = new javax.swing.JCheckBox();
        maintenanceLabel = new javax.swing.JLabel();
        maintenanceCheckBox = new javax.swing.JCheckBox();
        backBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        cityLabel = new javax.swing.JLabel();
        availTimeTxtBox = new javax.swing.JTextField();
        availTimeLabel = new javax.swing.JLabel();
        cityTxtField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        titleLabel.setText("Add new car to Uber fleet");

        nameLabel.setText("Name:");

        modeLabel.setText("Model:");

        serialNoLabel.setText("Serial Number:");

        manufacturerLabel.setText("Manufacturer:");

        yomLabel.setText("Year of Manufacture:");

        seatingCapacityLabel.setText("Seating Capacity:");

        colorLabel.setText("Color:");

        dateAddedLabel.setText("Car added on:");

        dateAddedTxtField.setEnabled(false);

        availabilityLabel.setText("Availability:");

        availabilityCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                availabilityCheckBoxStateChanged(evt);
            }
        });
        availabilityCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                availabilityCheckBoxMouseClicked(evt);
            }
        });

        maintenanceLabel.setText("Maintenance Certificate:");

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/backIcon.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        confirmBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/confirmIcon.png"))); // NOI18N
        confirmBtn.setText("Confirm");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        cityLabel.setText("City");

        availTimeTxtBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availTimeTxtBoxActionPerformed(evt);
            }
        });

        availTimeLabel.setText("Available in:");

        jLabel1.setText("(minutes)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(modeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(modelTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(serialNoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(serialNoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(manufacturerLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(manufacturerTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(yomLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(yomTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(seatingCapacityLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(seatingCapacityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dateAddedLabel)
                                            .addComponent(colorLabel)
                                            .addComponent(cityLabel)
                                            .addComponent(availTimeLabel)
                                            .addComponent(availabilityLabel)
                                            .addComponent(maintenanceLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(colorTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateAddedTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(availTimeTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(availabilityCheckBox)
                                            .addComponent(cityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(maintenanceCheckBox)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addComponent(titleLabel))
                .addContainerGap(239, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmBtn)
                .addGap(362, 362, 362))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(titleLabel)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(nameLabel)
                                            .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(modeLabel)
                                            .addComponent(modelTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(serialNoLabel)
                                    .addComponent(serialNoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(manufacturerLabel)
                                    .addComponent(manufacturerTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yomLabel)
                                    .addComponent(yomTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(seatingCapacityLabel)
                                    .addComponent(seatingCapacityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(colorLabel)
                                    .addComponent(colorTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dateAddedLabel)
                                    .addComponent(dateAddedTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cityLabel)
                                    .addComponent(cityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(availabilityLabel))
                            .addComponent(availabilityCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(availTimeLabel)
                            .addComponent(availTimeTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(maintenanceLabel))
                    .addComponent(maintenanceCheckBox))
                .addGap(21, 21, 21)
                .addComponent(confirmBtn)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        displayPanel.remove(this);
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);
    }//GEN-LAST:event_backBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        String name = nameTxtField.getText();
        if (name == null || name.equals("")) {
            showErrorMessage("Name");
            return;
        }
        String modelNo = modelTxtField.getText();
        if (modelNo == null || modelNo.equals("")) {
            showErrorMessage("Model Number");
            return;
        }
        try {
            Integer.parseInt(serialNoTxtField.getText());
        } catch (NumberFormatException e) {
            showErrorMessage("Serial Number");
            return;
        }
        String manufacturer = manufacturerTxtField.getText();
        if (manufacturer == null || manufacturer.equals("")) {
            showErrorMessage("Manufacturer");
            return;
        }
        try {
            Integer.parseInt(yomTxtField.getText());
        } catch (NumberFormatException e) {
            showErrorMessage("Year of Manufacture");
            return;
        }
        try {
            Integer.parseInt(seatingCapacityTxtField.getText());
        } catch (Exception e) {
            showErrorMessage("Seating Capacity");
            return;
        }
        String color = colorTxtField.getText();
        if (color == null || colorTxtField.getText().equals("")) {
            showErrorMessage("Color");
            return;
        }
        if (availTimeTxtBox.isEnabled()) {
            try {
                Integer.parseInt(availTimeTxtBox.getText());
            } catch (NumberFormatException e) {
                showErrorMessage("availability time");
                return;
            }
        }
        String city = cityTxtField.getText();
        if (city == null || cityTxtField.getText().equals("")) {
            showErrorMessage("City");
            return;
        }

        for (CarAttributes e : carFleet.getCarFleet()) {
            if ((e.getSerialNo() + "").equals(serialNoTxtField.getText())) {
                JOptionPane.showMessageDialog(null, "Car with provided serial number already exists", "Invalid Serial Number", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        CarAttributes carObj = carFleet.addCar();
        carObj.setName(name);
        carObj.setSerialNo(Integer.parseInt(serialNoTxtField.getText()));
        carObj.setModelNo(modelNo);
        for (CarAttributes e : carFleet.getCarFleet()) {
            if (e.getManufacturer().equalsIgnoreCase(manufacturer)) {
                System.out.println(e.getManufacturer());
                carObj.setManufacturer(e.getManufacturer());
                break;
            } else {
                carObj.setManufacturer(manufacturer);
            }
        }
        carObj.setYearOfManufacture(Integer.parseInt(yomTxtField.getText()));
        carObj.setCapacity(Integer.parseInt(seatingCapacityTxtField.getText()));
        carObj.setColor(color);
        carObj.setAvailability(availabilityCheckBox.isSelected());
        carObj.setMaintenanceCertificate(maintenanceCheckBox.isSelected());
        carObj.setDateOfCreation(dateAddedTxtField.getText());
        carObj.setCity(city);
        if (availTimeTxtBox.isEnabled()) {
            carObj.setAvailableMin(Integer.parseInt(availTimeTxtBox.getText()));
        }
        LocalDateTime dateTime = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd MMMM yyyy 'at' hh:mm");
        String dateTimeOfUpdate = dateTime.format(formatter);;
        carFleet.setDateTimeOfUpdate(dateTimeOfUpdate);
        System.out.println(carFleet.getDateTimeOfUpdate());
        JOptionPane.showMessageDialog(
                null, "Car added to fleet!", "Success", JOptionPane.PLAIN_MESSAGE);
        clearFields();
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void availTimeTxtBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availTimeTxtBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availTimeTxtBoxActionPerformed

    private void availabilityCheckBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_availabilityCheckBoxMouseClicked
        // TODO add your handling code here:
        availTimeTxtBox.setEnabled(availabilityCheckBox.isSelected());
        availTimeTxtBox.setText(null);
    }//GEN-LAST:event_availabilityCheckBoxMouseClicked

    private void availabilityCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_availabilityCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_availabilityCheckBoxStateChanged

    private void showErrorMessage(String error) {
        JOptionPane.showMessageDialog(null, "Please enter valid " + error, "Invalid Entry", JOptionPane.ERROR_MESSAGE);
    }

    private void clearFields() {
        nameTxtField.setText("");
        modelTxtField.setText("");
        serialNoTxtField.setText("");
        manufacturerTxtField.setText("");
        yomTxtField.setText("");
        seatingCapacityTxtField.setText("");
        colorTxtField.setText("");
        cityTxtField.setText("");
        availTimeTxtBox.setText("");
        availabilityCheckBox.setSelected(false);
        availTimeTxtBox.setEnabled(false);
        availTimeTxtBox.setText("");
        maintenanceCheckBox.setSelected(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availTimeLabel;
    private javax.swing.JTextField availTimeTxtBox;
    private javax.swing.JCheckBox availabilityCheckBox;
    private javax.swing.JLabel availabilityLabel;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTxtField;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JTextField colorTxtField;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel dateAddedLabel;
    private javax.swing.JTextField dateAddedTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox maintenanceCheckBox;
    private javax.swing.JLabel maintenanceLabel;
    private javax.swing.JLabel manufacturerLabel;
    private javax.swing.JTextField manufacturerTxtField;
    private javax.swing.JLabel modeLabel;
    private javax.swing.JTextField modelTxtField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JLabel seatingCapacityLabel;
    private javax.swing.JTextField seatingCapacityTxtField;
    private javax.swing.JLabel serialNoLabel;
    private javax.swing.JTextField serialNoTxtField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel yomLabel;
    private javax.swing.JTextField yomTxtField;
    // End of variables declaration//GEN-END:variables
}
